version: '3.3'

services:
  ################################################
  ####          MariaDB Container          ######
  ##############################################
  db_m2:
    image: nosto/mariadb:10.2
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: magento2_db
    volumes:
      - mage-datavolume:/var/lib/mysql
  ################################################
  ####          RabbitMQ Container         ######
  ##############################################
  rabbitmq_m2:
    image: rabbitmq:3.7-management
    hostname: magento2.dev.nos.to # Your Magento 2 installation host
    container_name: rabbitmq_m2
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672" # For management

  ################################################
  ####       Elastic Search Container      ######
  ##############################################
  es_m2:
    image: elasticsearch:7.6.2
    environment:
      discovery.type: single-node
  
  ################################################
  ####        Magento 2 Container          ######
  ##############################################
  magento2:
    build:
      context: ./magento2
      dockerfile: ./Dockerfile
    links:
      - db_m2
      - rabbitmq_m2
      - es_m2
    ports:
      - 9002:9002 #XDebug
    extra_hosts:
      my.dev.nos.to: 192.168.65.2
    hostname: magento
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.web-magento.rule=Host(`magento2.dev.nos.to`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.web-magento.entrypoints=web" # <== Defining the entrypoint for http
    volumes:
      - type: bind
        source: ./nosto-magento2
        target: /var/www/html/magento2/app/code/Nosto/Tagging
      # - type: volume
      #   source: mage-rootfiles
      #   target: /var/www/html/magento2/
      #   volume:
      #     nocopy: false
      # - type: bind
      #   source: ./nosto-magento2/vendor/magento
      #   target: /var/www/html/magento2/generated
      # Mage logs mounted to local. Not needed if we manage to mount the whole installation
      # - type: bind
      #   source: ./log
      #   target: /var/www/html/magento2/var/log/

    environment:
      COMPOSER_AUTH: "{\"http-basic\":{\"repo.magento.com\":{\"username\":\"\",\"password\":\"\"}}}"
      MYSQL_HOST: db_m2
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: magento2_db
      RABBITMQ_HOST: rabbitmq_m2
      VIRTUAL_HOST: magento2.dev.nos.to:8081
      ES_HOST: es_m2
      ADMIN_USER: admin
      ADMIN_PASSWORD: Admin12345
      # Use the env vars bellow to point to your local or staging play instance
      NOSTO_SERVER_URL: connect.my.dev.nos.to
      NOSTO_API_BASE_URL: http://host.docker.internal:9000/api
      NOSTO_OAUTH_BASE_URL: https://my.dev.nos.to/oauth
      NOSTO_WEB_HOOK_BASE_URL: https://my.dev.nos.to
      NOSTO_IFRAME_ORIGIN: https://my.dev.nos.to
      NOSTO_IFRAME_ORIGIN_REGEXP: .*
      PHP_IDE_CONFIG: serverName=magento2.dev.nos.to:8081

networks:
  default:
    external:
      name: web
volumes:
  mage-datavolume:
  # mage-rootfiles:
